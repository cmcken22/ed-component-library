import{c as h}from"./commonArgTypes-Cz1rbySM.js";import{s as j}from"./index-DOK-dFBq.js";import{j as t}from"./jsx-runtime-Du8NFWEI.js";import{s as d,c as y}from"./index-DFf-bhEl.js";import{r as c}from"./index-Dl6G-zuu.js";import{u as L}from"./useOnHover-DcG81d-b.js";import{T as b}from"./Typography-ClegP6xv.js";import{B as g}from"./Box-DPTDcbim.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-Bpxk95mn.js";import"./createTheme-DtgTEXL7.js";import"./Typography-BGHga1vv.js";import"./Typography-C8COxrag.js";const I=d(g,{shouldForwardProp:e=>e!=="checked"&&e!=="labelPosition",slot:"root"})(({theme:e,checked:a,disabled:o,labelPosition:r})=>({cursor:o?"default":"pointer",display:"flex",flexDirection:r==="right"?"row":"row-reverse",gap:"8px",alignItems:"center",width:"fit-content","& .ToggleLabel":{webkitUserSelect:"none",msUserSelect:"none",userSelect:"none",color:o?e.palette.charcoal[60]:e.palette.charcoal[90]},...!o&&{"&:hover":{".ToggleWrapper":{borderColor:e.palette.primary.main,".ToggleText--OFF":{color:e.palette.primary.main},...!a&&{".ToggleIndicator":{background:e.palette.primary.main}}}}}})),H=d(g,{shouldForwardProp:e=>e!=="checked",slot:"root"})(({theme:e,checked:a,disabled:o})=>{let r=e.palette.charcoal.main;return a&&(r=e.palette.primary.main),o&&(r=e.palette.charcoal[30]),{cursor:o?"default":"pointer",position:"relative",width:"38px",height:"20px",borderRadius:"24px",border:`1px solid ${r}`,backgroundColor:a?r:"white",borderColor:r,display:"flex",alignItems:"center",transition:"all 0.2s ease",".ToggleText":{webkitUserSelect:"none",msUserSelect:"none",userSelect:"none"},...!o&&{"&:hover":{borderColor:e.palette.primary.main,".ToggleText--OFF":{color:e.palette.primary.main},...!a&&{".ToggleIndicator":{background:e.palette.primary.main}}}}}}),E=d(g,{shouldForwardProp:e=>e!=="checked",slot:"root"})(({theme:e,checked:a,disabled:o})=>{let r=a?"white":e.palette.charcoal.main;return o&&(r=a?"white":e.palette.charcoal[30]),{position:"absolute",width:"16px",height:"16px",background:r,borderRadius:"50%",left:a?"18px":"1px",transition:"all 0.2s ease"}}),U=d(g,{shouldForwardProp:e=>e!=="checked",slot:"root"})(()=>({height:"100%",width:"50%",display:"flex",justifyContent:"center",alignItems:"center"})),i=({id:e,className:a,checked:o,disabled:r,onChange:u,onHover:S,displayToggleText:f,label:m,labelPosition:q,sx:N})=>{const[n,T]=c.useState(o||!1),O=L({callback:S}),V=c.useCallback(l=>{r||(T(l),u&&u(l))},[T,u,r]),x=c.useCallback(l=>f?t.jsx(U,{sx:{pr:l==="OFF"?.3:0},children:t.jsx(b,{className:y("ToggleText",{[`ToggleText--${l}`]:l}),variant:"errorMessage",color:l==="OFF"?"charcoal.main":"white",fontSize:"8px",children:l})}):null,[f]),_=c.useCallback(()=>m?t.jsx(b,{className:"ToggleLabel",variant:"bodyS",children:m}):null,[m]);return t.jsxs(I,{id:e,className:y("Toggle",{[a]:a}),"data-testid":"Toggle","data-checked":n,disabled:r,checked:n,...O,onClick:()=>V(!n),labelPosition:q,sx:N,children:[t.jsxs(H,{className:"ToggleWrapper",checked:n,disabled:r,children:[x("ON"),t.jsx(E,{className:"ToggleIndicator",checked:n,disabled:r}),x("OFF")]}),_()]})};i.defaultProps={displayToggleText:!1,labelPosition:"right"};try{i.displayName="Toggle",i.__docgenInfo={description:"",displayName:"Toggle",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},checked:{defaultValue:null,description:"",name:"checked",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(value: boolean) => void"}},displayToggleText:{defaultValue:{value:"false"},description:'Display the text "ON" and "OFF" inside the toggle',name:"displayToggleText",required:!1,type:{name:"boolean"}},label:{defaultValue:null,description:"",name:"label",required:!1,type:{name:"string"}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"any"}},labelPosition:{defaultValue:null,description:"",name:"labelPosition",required:!1,type:{name:"enum",value:[{value:'"right"'},{value:'"left"'}]}},onHover:{defaultValue:null,description:"",name:"onHover",required:!1,type:{name:"(hovered?: boolean) => void"}}}}}catch{}const X={title:"Example/Toggle",component:i,parameters:{layout:"centered",docs:{source:{transform:j("Toggle")}}},tags:["autodocs"],argTypes:{...h.onChange,...h.onHover}},s={args:{...i.defaultProps,displayToggleText:!1,label:"Toggle Label"}},p={args:{...s.args,labelPosition:"left"}};var v,k,F;s.parameters={...s.parameters,docs:{...(v=s.parameters)==null?void 0:v.docs,source:{originalSource:`{
  args: {
    ...Toggle.defaultProps,
    displayToggleText: false,
    label: "Toggle Label"
  }
}`,...(F=(k=s.parameters)==null?void 0:k.docs)==null?void 0:F.source}}};var w,P,C;p.parameters={...p.parameters,docs:{...(w=p.parameters)==null?void 0:w.docs,source:{originalSource:`{
  args: {
    ...Sample.args,
    labelPosition: "left"
  }
}`,...(C=(P=p.parameters)==null?void 0:P.docs)==null?void 0:C.source}}};const Y=["Sample","LabelPositionLeft"];export{p as LabelPositionLeft,s as Sample,Y as __namedExportsOrder,X as default};
